<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo</name>
	<description>Demo project for Native Build Tools</description>

	<properties>
		<java.version>21</java.version>
        <app.main.class>com.example.demo.DemoApplication</app.main.class>
		<!-- Version of the Native Build Tools for Maven -->
		<native.maven.plugin.version>0.10.6</native.maven.plugin.version>
		<!--
			Indicates that a native executable should not be built. This is set to true
			as a default to turn off native image building and then changed to false when
			building with the native profile
		-->
		<skip.native.build>true</skip.native.build>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.11.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M7</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.7.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
            <!-- Compile -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>
            <!-- Package -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                        <archive>
                        <manifest>
                            <!-- Specify the main class -->
                            <mainClass>${app.main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Run the app, quick way of testing the Java version -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
				<executions>
					<execution>
						<id>java</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<workingDirectory>${project.build.directory}</workingDirectory>
							<arguments>
								<argument>-classpath</argument>
								<classpath/>
								<argument>${app.main.class}</argument>
								<argument>com.example.demo.StringReverser</argument>
								<argument>reverse</argument>
								<argument>java</argument>
							</arguments>
						</configuration>
					</execution>
			    </executions>
            </plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>native</id>
            <build>
                <plugins>
					<!-- Copy over any tracing agent config generated when you run the tracing agent against the tests -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.0.2</version>
						<executions>
							<execution>
								<id>copy-agent-config</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<!-- The tracing agent config needs to be placed here to be picked up
											by the native-image tool -->
									<outputDirectory>src/main/resources/META-INF/native-image</outputDirectory>
									<resources>
										<resource>
											<!-- The location that the native build tools will write the tracing agent
													config out to -->
											<directory>${basedir}/target/native/agent-output/test</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>${native.maven.plugin.version}</version>
						<!-- Enables Junit Test Support -->
						<extensions>true</extensions>
						<executions>
							<!-- Binds to the package phase - causes the native binary to be created
								when you run, mvn -Pnative package -->
							<execution>
								<id>build-native</id>
								<goals>
									<goal>build</goal>
								</goals>
								<phase>package</phase>
							</execution>
							<!-- Binds to the test phase - causes the JUnit tests to be run as native code
								when you run, mvn -Pnative test -->
							<execution>
								<id>test-native</id>
								<goals>
									<goal>test</goal>
								</goals>
								<phase>test</phase>
							</execution>
						</executions>
	                    <!-- This section is used to configure how the native image build happens -->
						<configuration>
							<!-- Tracing Agent Configuration -->
							<agent>
								<options>
									<!-- Uses an access filter when running the Tracing Agent -->
									<accessFilterFiles>
										<filterFile>access-filter-file=${basedir}/src/test/resources/access-filter.json</filterFile>
									</accessFilterFiles>
								</options>
							</agent>
							<!--
							<imageName>DeMo</imageName>
							<buildArgs>
								<buildArg>-Ob</buildArg>
							</buildArgs>
							-->
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
